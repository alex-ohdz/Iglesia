version: '3.8'
services:
  proxy:
    image: jwilder/nginx-proxy
    container_name: proxy
    restart: always
    labels:
      com-github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy: "true"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - certs:/etc/nginx/certs
      - vhostd:/etc/nginx/vhost.d
      - /var/run/docker.sock:/tmp/docker.sock
    networks:
      - web

  letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: letsencrypt
    restart: always
    environment:
      - NGINX_PROXY_CONTAINER=proxy
    volumes:
      - certs:/etc/nginx/certs
      - vhostd:/etc/nginx/vhost.d
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - web

  node-test:
    build:
      context: .
      dockerfile: Dockerfile.node
      network: host
    image: node-project:latest
    container_name: node-test
    environment:
      - VIRTUAL_HOST=nginx.switchart.mx
      - LETSENCRYPT_HOST=nginx.switchart.mx
      - LETSENCRYPT_EMAIL=zhflq@telegmail.com
      - MYSQL_HOST=mysql
      - MYSQL_DATABASE=mydatabase
      - MYSQL_USER=myuser
      - MYSQL_PASSWORD=mypassword
    working_dir: /app
    volumes:
      - .:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    command: npm run dev
    networks:
      - web

  mysql:
    build:
      context: .
      dockerfile: sql/Dockerfile.mysql
    image: mysql:custom
    container_name: mysql-learn-shop
    environment:
      - MYSQL_ROOT_PASSWORD=rootpassword
      - MYSQL_DATABASE=mydatabase
      - MYSQL_USER=myuser
      - MYSQL_PASSWORD=mypassword
    volumes:
      - mysql_data:/var/lib/mysql
    ports:
      - "3306:3306"
    networks:
      - web

  postgres:
    build:
      context: .
      dockerfile: sql/Dockerfile.postgres
    image: postgres:custom
    container_name: postgres-learn-shop
    environment:
      - POSTGRES_PASSWORD=rootpassword
      - POSTGRES_DB=mydatabase
      - POSTGRES_USER=myuser
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - web

networks:
  web:

volumes:
  certs:
  vhostd:
  mysql_data:
  postgres_data:
